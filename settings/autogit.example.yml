# uncomment settings u wish to override

changelog:
  REPOSITORY_OWNER: REPOSITORY_OWNER
  REPOSITORY_NAME: REPOSITORY_NAME
  # templating lines used to form changelog. Replace REPOSITORY_OWNER and REPOSITORY_NAME with your own values
  commitUrl: "https://github.com/{{.REPOSITORY_OWNER}}/{{.REPOSITORY_NAME}}/commit/{{.CommitHash}}"
  commitRangeUrl: "https://github.com/{{.REPOSITORY_OWNER}}/{{.REPOSITORY_NAME}}/compare/{{.From}}...{{.To}}?diff=split"
  issueUrl: "https://github.com/{{.REPOSITORY_OWNER}}/{{.REPOSITORY_NAME}}/issues/{{.Issue}}"

# header is copied from https://gist.github.com/marcojahn/482410b728c31b221b70ea6d2c433f0c, type, scope, subject, the rest
regex:
  # regex values are used to parse correctly commit message. Likely hook of any changes necessary is low, but could be useful
  conventionalCommit:
    # type(scope): header\n\nbody.
    # + Made less restrictive rules to merge Github Merge commits. (1ndA-Z), (2nd)?:?
    header: '^([a-zA-Z]+)(?:\(([\w]+)\))?(\!?)?:? (?:([ -~]+))(?:\n\n([\s -~]*)|[\n])?\z'
    bodyFooter: '(?:([ -9;-~]+))\: (?:([ -9;-~]+))' # body can have key: value multiple footers
  issue: 'i-\#([0-9]+)' # Regex to grab linked issue. Lets grab prefixed i-only. Otherwise conflicts with GH PR links
  # copied from https://semver.org/spec/v2.0.0.html . Modified to make Patch as optional with '\.?(0|[1-9]\d*)?'
  semVer: '^v?(0|[1-9]\d*)\.(0|[1-9]\d*)\.?(0|[1-9]\d*)?(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'
  prerelease: '(?:a\.([0-9]+))?\.?(?:b\.([0-9]+))?\.?(?:rc\.([0-9]+))?'
  validation:
    scope:
      lowercase: '^[a-z]+$' # scope is made only out of english lower case letters by default
    type:
      lowercase: '^[a-z]+$' # type is made only out of english lower case letters by default

validation:
  sections:
    hook:
      commitMsg:
        enabled: true # validates submitted commits for repository, if hook is activated
  rules:
    issue:
      # forces to link github/gitlab issue. Depends on correct regex.issue (configured for Github)
      present: false
    header:
      # Max Github(and may be for others) readable commit length for first line of a commit msg
      maxLength: 72
      type:
        lowercase: true
        # Add yours if desired. Empty list means everything is allowed
        allowlists:
          # for increasing major vers, write type as `feat!`
          semver_minor_increases: # This group is rendered to changelog
            - "feat" #  Commits, that adds a new feature
            - "Merge" # Commits to merge branches. Usually uppercase is PR merges to master branch in Github
          semver_patch_increases: # This group is rendered to changelog
            - "fix" #  Commits, that fixes a bug
            - "build" #  Commits, that affect build components like build tool, dependencies, ...
            - "docs" #  Commits, that affect documentation only. Comments are part of docs
            - "perf" #  Commits (Child of refactor) are refactor commits, that improve performance
            - "revert" # Commits, to revert stuff
          semver_is_not_affected: # This group is not rendered to changelog
            - "chore" #  Miscellaneous commits e.g. modifying .gitignore
            - "refactor" # Commits, that rewrite your code, but do not change any API behaviour
            - "style" #  Commits, that do not affect the meaning (white-space, formatting, etc)
            - "test" # Commits, that add missing tests or correcting existing tests
            - "ops" # Commits, that affect operational components like infrastructure, deployment, ...
            - "ci"  # Commits, (Child of ops) Configuring or reparing CI
            - "merge" # Commits to merge branches. Usually we use lowcase ones to update dev branch with master commits
      scope:
        present: false # feat(scope): smth. Forces to write scope of a commit. Participes in changelog generation
        lowercase: true
        allowlist: [] # which scopes are allowed. Empty list means allowed everything.
      subject:
        minWords: 3 # 3 or higher value helps to write more meaningful commits

# expects to find file `id_rsa` in ~/.ssh for `autogit semver --push` command
# where ~ your home folder discovered with env var HOME
git:
  sshPath: id_rsa